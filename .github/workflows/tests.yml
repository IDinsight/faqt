name: Unit Tests
on:
  workflow_dispatch:
  push:
    branches:
      - "**"

jobs:
  RunUnitTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies with Apt Get
        run: |
          sudo apt-get update
          sudo apt-get install python3.8 jq -y
      - name: Install libraries
        run: |
          pip install -r requirements.txt
          pip install -r requirements_dev.txt
          nltkdownload=`cat <<EOF
          import nltk
          nltk.download('stopwords')
          nltk.download('punkt')
          EOF`
          python -c "$nltkdownload"
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Make huggingface model dir
        run: mkdir ./tests/data/sequence_classification_models
      - uses: keithweaver/aws-s3-github-action@v1.0.0 # Verifies the recursive flag
        name: Download huggingface model
        with:
          command: sync
          source: s3://${{ secrets.WORD2VEC_BINARY_BUCKET }}/huggingface_model.tar.gz
          destination: ./tests/data/sequence_classification_models
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          flags: --recursive
      - name: Unpack huggingface model
        run: |
          tar -xvf ./tests/data/sequence_classification_models/huggingface_model.tar.gz -C ./tests/data/sequence_classification_models
          rm ./tests/data/sequence_classification_models/huggingface_model.tar.gz
      - name: Run Unit Tests
        env: 
          WORD2VEC_BINARY_BUCKET: ${{secrets.WORD2VEC_BINARY_BUCKET}}
        run: |
          coverage run -m pytest
          coverage lcov --include="faqt/*"
      - name: Coveralls Test Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov
        
